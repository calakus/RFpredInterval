useDynLib(RFpredInterval, .registration = TRUE)

importFrom("data.tree", "FromDataFrameNetwork", "SetGraphStyle",
           "SetEdgeStyle", "SetNodeStyle", "Do", "GetDefaultTooltip")
importFrom("DiagrammeR", "render_graph", "create_graph",
           "create_node_df", "create_edge_df", "add_global_graph_attrs")
importFrom("parallel", mclapply)
importFrom("graphics", "abline", "arrows", "axis", "box", "boxplot", "bxp", "grid",
           "legend", "lines", "matlines", "matplot", "mtext", "par", "plot",
           "plot.new", "plot.window", "points", "rug", "segments",
           "strwidth", "text", "title", "grconvertX", "grconvertY", "plot.default")
importFrom("stats", "as.dist", "as.formula", "cutree", "dlnorm", "formula",
           "hclust", "lowess", "median", "model.matrix", "na.omit",
           "optim", "pgamma", "plnorm", "pnorm", "predict", 
           "quantile", "qnorm", "runif", "sd", "supsmu", "var", "wilcox.test")
importFrom("utils", "txtProgressBar", "setTxtProgressBar",
           "write.table", "tail")
importFrom("grDevices", "gray")
import(data.table)

export(pibf)
export(rfpi)
export(piall)
export(plot.rfpredinterval)
export(print.rfpredinterval)

S3method(plot, rfpredinterval)
S3method(print, rfpredinterval)